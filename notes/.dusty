
function simplifyExecutionStatus(executedTx : PreparseSwapResult) : SimplifiedExecutionStatus {
    // i can narrow this type because earlier-stage failures would already be caught
    const status = executedTx.status as TransactionExecutionError|TransactionExecutionErrorCouldntConfirm|'transaction-confirmed';
    if (status === 'transaction-confirmed') {
        return SimplifiedExecutionStatus.Executed;
    }
    else if (isTransactionExecutionError(status)) {
        return SimplifiedExecutionStatus.DidNotExecute;
    }
    else if (isTransactionExecutionErrorCouldntConfirm(status)) {
        return SimplifiedExecutionStatus.PossiblyExecuted;
    }
    else {
        throw new Error("programmer error");
    }
}

enum SimplifiedExecutionStatus {
    Executed = "Executed",
    DidNotExecute = "DidNotExecute",
    PossiblyExecuted = "PossiblyExecuted"
};

function isDidNotExecute(status : SimplifiedExecutionStatus) : status is SimplifiedExecutionStatus.DidNotExecute {
    return status === SimplifiedExecutionStatus.DidNotExecute;
}

function isExecuted(status : SimplifiedExecutionStatus) : status is SimplifiedExecutionStatus.Executed {
    return status === SimplifiedExecutionStatus.Executed;
}

function isPossiblyExecuted(status : SimplifiedExecutionStatus) : status is SimplifiedExecutionStatus.PossiblyExecuted {
    return status === SimplifiedExecutionStatus.PossiblyExecuted;
}